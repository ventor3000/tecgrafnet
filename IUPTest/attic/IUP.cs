// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace IUP
{
    /// <summary>*********************************************************************</summary>
    public enum IUP
    {
        IUP_SHOW = 0,
        IUP_RESTORE = 1,
        IUP_MINIMIZE = 2,
        IUP_MAXIMIZE = 3,
        IUP_HIDE = 4
    }

    /// <summary>*********************************************************************</summary>
    public enum IUP_SB
    {
        IUP_SBUP = 0,
        IUP_SBDN = 1,
        IUP_SBPGUP = 2,
        IUP_SBPGDN = 3,
        IUP_SBPOSV = 4,
        IUP_SBDRAGV = 5,
        IUP_SBLEFT = 6,
        IUP_SBRIGHT = 7,
        IUP_SBPGLEFT = 8,
        IUP_SBPGRIGHT = 9,
        IUP_SBPOSH = 10,
        IUP_SBDRAGH = 11
    }

    /// <summary>*********************************************************************</summary>
    public enum IUP_REC
    {
        IUP_RECBINARY = 0,
        IUP_RECTEXT = 1
    }

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
    public unsafe delegate int Icallback(__IntPtr __0);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(__CallingConvention.Cdecl)]
    public unsafe delegate int Iparamcb(__IntPtr dialog, int param_index, __IntPtr user_data);

    public unsafe partial class Ihandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::IUP.Ihandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::IUP.Ihandle>();

        protected bool __ownsNativeInstance;

        internal static Ihandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Ihandle(native.ToPointer(), skipVTables);
        }

        internal static Ihandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Ihandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Ihandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Ihandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Ihandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Ihandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class iup
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupOpen", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupOpen(int* argc, sbyte*** argv);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupClose", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupClose();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupIsOpened", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupIsOpened();

            [SuppressUnmanagedCodeSecurity, DllImport("IUP", EntryPoint = "IupImageLibOpen", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupImageLibOpen();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMainLoop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupMainLoop();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLoopStep", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupLoopStep();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLoopStepWait", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupLoopStepWait();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMainLoopLevel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupMainLoopLevel();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlush", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupFlush();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupExitLoop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupExitLoop();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupPostMessage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupPostMessage(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string s, int i, double d, __IntPtr p);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupRecordInput", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupRecordInput([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename, int mode);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupPlayInput", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupPlayInput([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupUpdate", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupUpdate(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupUpdateChildren", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupUpdateChildren(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupRedraw", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupRedraw(__IntPtr ih, int children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupRefresh", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupRefresh(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupRefreshChildren", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupRefreshChildren(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupExecute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupExecute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string parameters);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupExecuteWait", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupExecuteWait([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string parameters);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupHelp", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupHelp([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string url);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupLog([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string type, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLoad", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupLoad([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLoadBuffer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupLoadBuffer([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string buffer);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVersion", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupVersion();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVersionDate", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupVersionDate();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVersionNumber", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupVersionNumber();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVersionShow", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupVersionShow();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetLanguage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetLanguage([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string lng);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetLanguage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetLanguage();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetLanguageString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string str);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStoreLanguageString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupStoreLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string str);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetLanguageString", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetLanguagePack", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetLanguagePack(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDestroy", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupDestroy(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDetach", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupDetach(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupAppend", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupAppend(__IntPtr ih, __IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupInsert", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupInsert(__IntPtr ih, __IntPtr ref_child, __IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetChild", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetChild(__IntPtr ih, int pos);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetChildPos", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetChildPos(__IntPtr ih, __IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetChildCount", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetChildCount(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetNextChild", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetNextChild(__IntPtr ih, __IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetBrother", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetBrother(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetParent", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetParent(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetDialog(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetDialogChild", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetDialogChild(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupReparent", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupReparent(__IntPtr ih, __IntPtr new_parent, __IntPtr ref_child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupPopup", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupPopup(__IntPtr ih, int x, int y);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupShow", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupShow(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupShowXY", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupShowXY(__IntPtr ih, int x, int y);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupHide", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupHide(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMap", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupMap(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupUnmap", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupUnmap(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupResetAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupResetAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAllAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetAllAttributes(__IntPtr ih, sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCopyAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupCopyAttributes(__IntPtr src_ih, __IntPtr dst_ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAtt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetAtt([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string handle_name, __IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetAttributes(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string str);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetAttributes(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrf(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetInt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetInt(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetFloat", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetFloat(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, float value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetDouble", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetDouble(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, double value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetRGB", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetRGB(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, byte r, byte g, byte b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetRGBA", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetRGBA(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, byte r, byte g, byte b, byte a);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetInt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetInt(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetInt2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetInt2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetIntInt", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetIntInt(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int* i1, int* i2);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFloat", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float IupGetFloat(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetDouble", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double IupGetDouble(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetRGB", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupGetRGB(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, byte* r, byte* g, byte* b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetRGBA", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupGetRGBA(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, byte* r, byte* g, byte* b, byte* a);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributeId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttributeId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrAttributeId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrAttributeId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrfId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrfId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetIntId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetIntId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, int value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetFloatId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetFloatId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, float value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetDoubleId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetDoubleId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, double value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetRGBId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetRGBId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, byte r, byte g, byte b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributeId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetAttributeId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetIntId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetIntId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFloatId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float IupGetFloatId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetDoubleId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double IupGetDoubleId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetRGBId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupGetRGBId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, byte* r, byte* g, byte* b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributeId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttributeId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrAttributeId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrAttributeId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrfId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrfId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetIntId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetIntId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, int value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetFloatId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetFloatId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, float value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetDoubleId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetDoubleId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, double value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetRGBId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetRGBId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, byte r, byte g, byte b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributeId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetAttributeId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetIntId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetIntId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFloatId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float IupGetFloatId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetDoubleId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double IupGetDoubleId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetRGBId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupGetRGBId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, byte* r, byte* g, byte* b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetGlobal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetGlobal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetStrGlobal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetStrGlobal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetGlobal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetGlobal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetFocus", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetFocus(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFocus", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetFocus();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupPreviousField", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupPreviousField(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupNextField", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupNextField(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetCallback", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetCallback(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetCallback", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetCallback(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, __IntPtr func);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetCallbacks", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetCallbacks(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, __IntPtr func);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFunction", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetFunction([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetFunction", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetFunction([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, __IntPtr func);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetHandle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSetHandle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, __IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAllNames", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetAllNames(sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAllDialogs", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetAllDialogs(sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetName", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetName(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributeHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttributeHandle(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, __IntPtr ih_named);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributeHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetAttributeHandle(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributeHandleId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttributeHandleId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, __IntPtr ih_named);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributeHandleId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetAttributeHandleId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetAttributeHandleId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetAttributeHandleId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, __IntPtr ih_named);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAttributeHandleId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGetAttributeHandleId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetClassName", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetClassName(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetClassType", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* IupGetClassType(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetAllClasses", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetAllClasses(sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetClassAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetClassAttributes([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname, sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetClassCallbacks", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetClassCallbacks([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname, sbyte** names, int n);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSaveClassAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSaveClassAttributes(__IntPtr ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCopyClassAttributes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupCopyClassAttributes(__IntPtr src_ih, __IntPtr dst_ih);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetClassDefaultAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetClassDefaultAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupClassMatch", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupClassMatch(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCreate", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCreate([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCreatev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCreatev([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname, void** @params);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCreatep", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCreatep([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string classname, __IntPtr first);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFill", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFill();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSpace", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSpace();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupRadio", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupRadio(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupVbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVboxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupVboxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupZbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupZbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupZboxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupZboxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupHbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupHbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupHboxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupHboxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupNormalizer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupNormalizer(__IntPtr ih_first);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupNormalizerv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupNormalizerv(__IntPtr ih_list);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCboxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCboxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSplit", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSplit(__IntPtr child1, __IntPtr child2);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupScrollBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupScrollBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatScrollBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatScrollBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGridBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGridBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGridBoxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGridBoxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMultiBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMultiBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMultiBoxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMultiBoxv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupExpander", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupExpander(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDetachBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupDetachBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupBackgroundBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupBackgroundBox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFrame", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFrame(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatFrame", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatFrame(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupImage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupImage(int width, int height, byte* pixels);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupImageRGB", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupImageRGB(int width, int height, byte* pixels);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupImageRGBA", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupImageRGBA(int width, int height, byte* pixels);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupItem", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupItem([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSubmenu", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSubmenu([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, __IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSeparator", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSeparator();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMenu", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMenu(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMenuv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMenuv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupButton", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupButton([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatButton", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatButton([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatToggle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatToggle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDropButton", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupDropButton(__IntPtr dropchild);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatLabel([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatSeparator", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatSeparator();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCanvas", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCanvas([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupDialog(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupUser", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupUser();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupThread", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupThread();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupLabel([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupList", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupList([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatList", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatList();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupText", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupText([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMultiLine", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMultiLine([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupToggle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupToggle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string action);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTimer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupTimer();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupClipboard", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupClipboard();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupProgressBar", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupProgressBar();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupVal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupVal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string type);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatVal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatVal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string type);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatTree", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatTree();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTabs", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupTabs(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTabsv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupTabsv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatTabs", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatTabs(__IntPtr first);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFlatTabsv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFlatTabsv(__IntPtr children);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTree", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupTree();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLink", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupLink([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string url, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupAnimatedLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupAnimatedLabel(__IntPtr animation);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDatePick", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupDatePick();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupCalendar", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupCalendar();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupColorbar", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupColorbar();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGauge", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGauge();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupDial", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupDial([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string type);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupColorBrowser", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupColorBrowser();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSpin", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSpin();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSpinbox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupSpinbox(__IntPtr child);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStringCompare", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupStringCompare([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string str1, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string str2, int casesensitive, int lexicographic);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSaveImageAsText", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupSaveImageAsText(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string filename, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupImageGetHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupImageGetHandle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTextConvertLinColToPos", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupTextConvertLinColToPos(__IntPtr ih, int lin, int col, int* pos);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTextConvertPosToLinCol", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupTextConvertPosToLinCol(__IntPtr ih, int pos, int* lin, int* col);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupConvertXYToPos", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupConvertXYToPos(__IntPtr ih, int x, int y);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStoreGlobal", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupStoreGlobal([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStoreAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupStoreAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetfAttribute", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetfAttribute(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStoreAttributeId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupStoreAttributeId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetfAttributeId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetfAttributeId(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string f);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupStoreAttributeId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupStoreAttributeId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string value);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupSetfAttributeId2", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupSetfAttributeId2(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int lin, int col, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTreeSetUserId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupTreeSetUserId(__IntPtr ih, int id, __IntPtr userid);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTreeGetUserId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupTreeGetUserId(__IntPtr ih, int id);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTreeGetId", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupTreeGetId(__IntPtr ih, __IntPtr userid);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupTreeSetAttributeHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupTreeSetAttributeHandle(__IntPtr ih, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name, int id, __IntPtr ih_named);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFileDlg", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFileDlg();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMessageDlg", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupMessageDlg();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupColorDlg", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupColorDlg();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupFontDlg", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupFontDlg();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupProgressDlg", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupProgressDlg();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetFile", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetFile(sbyte* arq);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMessage", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupMessage([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string msg);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMessagef", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupMessagef([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMessageError", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void IupMessageError(__IntPtr parent, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string message);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupMessageAlarm", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupMessageAlarm(__IntPtr parent, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string message, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string buttons);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupAlarm", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupAlarm([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string msg, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string b1, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string b2, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string b3);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupScanf", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupScanf([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupListDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupListDialog(int type, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, int size, sbyte** list, int op, int max_col, int max_lin, int* marks);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetText", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetText([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, sbyte* text, int maxsize);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetColor", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetColor(int x, int y, byte* r, byte* g, byte* b);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetParam", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetParam([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, __IntPtr action, __IntPtr user_data, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGetParamv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int IupGetParamv([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, __IntPtr action, __IntPtr user_data, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format, int param_count, int param_extra, void** param_data);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupParam", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupParam([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string format);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupParamBox", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupParamBox(__IntPtr param);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupParamBoxv", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupParamBoxv(__IntPtr param_array);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupLayoutDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupLayoutDialog(__IntPtr dialog);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupElementPropertiesDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupElementPropertiesDialog(__IntPtr parent, __IntPtr elem);

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupGlobalsDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupGlobalsDialog();

            [SuppressUnmanagedCodeSecurity, DllImport("iup", EntryPoint = "IupClassInfoDialog", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr IupClassInfoDialog(__IntPtr parent);
        }

        /// <summary>*********************************************************************</summary>
        public static int IupOpen(ref int argc, sbyte*** argv)
        {
            fixed (int* __argc0 = &argc)
            {
                var __arg0 = __argc0;
                var __ret = __Internal.IupOpen(__arg0, argv);
                return __ret;
            }
        }

        public static void IupClose()
        {
            __Internal.IupClose();
        }

        public static int IupIsOpened()
        {
            var __ret = __Internal.IupIsOpened();
            return __ret;
        }

        public static void IupImageLibOpen()
        {
            __Internal.IupImageLibOpen();
        }

        public static int IupMainLoop()
        {
            var __ret = __Internal.IupMainLoop();
            return __ret;
        }

        public static int IupLoopStep()
        {
            var __ret = __Internal.IupLoopStep();
            return __ret;
        }

        public static int IupLoopStepWait()
        {
            var __ret = __Internal.IupLoopStepWait();
            return __ret;
        }

        public static int IupMainLoopLevel()
        {
            var __ret = __Internal.IupMainLoopLevel();
            return __ret;
        }

        public static void IupFlush()
        {
            __Internal.IupFlush();
        }

        public static void IupExitLoop()
        {
            __Internal.IupExitLoop();
        }

        public static void IupPostMessage(global::IUP.Ihandle ih, string s, int i, double d, __IntPtr p)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupPostMessage(__arg0, s, i, d, p);
        }

        public static int IupRecordInput(string filename, int mode)
        {
            var __ret = __Internal.IupRecordInput(filename, mode);
            return __ret;
        }

        public static int IupPlayInput(string filename)
        {
            var __ret = __Internal.IupPlayInput(filename);
            return __ret;
        }

        public static void IupUpdate(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupUpdate(__arg0);
        }

        public static void IupUpdateChildren(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupUpdateChildren(__arg0);
        }

        public static void IupRedraw(global::IUP.Ihandle ih, int children)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupRedraw(__arg0, children);
        }

        public static void IupRefresh(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupRefresh(__arg0);
        }

        public static void IupRefreshChildren(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupRefreshChildren(__arg0);
        }

        public static int IupExecute(string filename, string parameters)
        {
            var __ret = __Internal.IupExecute(filename, parameters);
            return __ret;
        }

        public static int IupExecuteWait(string filename, string parameters)
        {
            var __ret = __Internal.IupExecuteWait(filename, parameters);
            return __ret;
        }

        public static int IupHelp(string url)
        {
            var __ret = __Internal.IupHelp(url);
            return __ret;
        }

        public static void IupLog(string type, string format)
        {
            __Internal.IupLog(type, format);
        }

        public static sbyte* IupLoad(string filename)
        {
            var __ret = __Internal.IupLoad(filename);
            return __ret;
        }

        public static sbyte* IupLoadBuffer(string buffer)
        {
            var __ret = __Internal.IupLoadBuffer(buffer);
            return __ret;
        }

        public static sbyte* IupVersion()
        {
            var __ret = __Internal.IupVersion();
            return __ret;
        }

        public static sbyte* IupVersionDate()
        {
            var __ret = __Internal.IupVersionDate();
            return __ret;
        }

        public static int IupVersionNumber()
        {
            var __ret = __Internal.IupVersionNumber();
            return __ret;
        }

        public static void IupVersionShow()
        {
            __Internal.IupVersionShow();
        }

        public static void IupSetLanguage(string lng)
        {
            __Internal.IupSetLanguage(lng);
        }

        public static sbyte* IupGetLanguage()
        {
            var __ret = __Internal.IupGetLanguage();
            return __ret;
        }

        public static void IupSetLanguageString(string name, string str)
        {
            __Internal.IupSetLanguageString(name, str);
        }

        public static void IupStoreLanguageString(string name, string str)
        {
            __Internal.IupStoreLanguageString(name, str);
        }

        public static sbyte* IupGetLanguageString(string name)
        {
            var __ret = __Internal.IupGetLanguageString(name);
            return __ret;
        }

        public static void IupSetLanguagePack(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetLanguagePack(__arg0);
        }

        public static void IupDestroy(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupDestroy(__arg0);
        }

        public static void IupDetach(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            __Internal.IupDetach(__arg0);
        }

        public static global::IUP.Ihandle IupAppend(global::IUP.Ihandle ih, global::IUP.Ihandle child)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg1 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupAppend(__arg0, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupInsert(global::IUP.Ihandle ih, global::IUP.Ihandle ref_child, global::IUP.Ihandle child)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg1 = ref_child is null ? __IntPtr.Zero : ref_child.__Instance;
            var __arg2 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupInsert(__arg0, __arg1, __arg2);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetChild(global::IUP.Ihandle ih, int pos)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetChild(__arg0, pos);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static int IupGetChildPos(global::IUP.Ihandle ih, global::IUP.Ihandle child)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg1 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupGetChildPos(__arg0, __arg1);
            return __ret;
        }

        public static int IupGetChildCount(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetChildCount(__arg0);
            return __ret;
        }

        public static global::IUP.Ihandle IupGetNextChild(global::IUP.Ihandle ih, global::IUP.Ihandle child)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg1 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupGetNextChild(__arg0, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetBrother(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetBrother(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetParent(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetParent(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetDialog(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetDialog(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetDialogChild(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetDialogChild(__arg0, name);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static int IupReparent(global::IUP.Ihandle ih, global::IUP.Ihandle new_parent, global::IUP.Ihandle ref_child)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg1 = new_parent is null ? __IntPtr.Zero : new_parent.__Instance;
            var __arg2 = ref_child is null ? __IntPtr.Zero : ref_child.__Instance;
            var __ret = __Internal.IupReparent(__arg0, __arg1, __arg2);
            return __ret;
        }

        public static int IupPopup(global::IUP.Ihandle ih, int x, int y)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupPopup(__arg0, x, y);
            return __ret;
        }

        public static int IupShow(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupShow(__arg0);
            return __ret;
        }

        public static int IupShowXY(global::IUP.Ihandle ih, int x, int y)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupShowXY(__arg0, x, y);
            return __ret;
        }

        public static int IupHide(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupHide(__arg0);
            return __ret;
        }

        public static int IupMap(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupMap(__arg0);
            return __ret;
        }

        public static void IupUnmap(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupUnmap(__arg0);
        }

        public static void IupResetAttribute(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupResetAttribute(__arg0, name);
        }

        public static int IupGetAllAttributes(global::IUP.Ihandle ih, sbyte** names, int n)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAllAttributes(__arg0, names, n);
            return __ret;
        }

        public static void IupCopyAttributes(global::IUP.Ihandle src_ih, global::IUP.Ihandle dst_ih)
        {
            var __arg0 = src_ih is null ? __IntPtr.Zero : src_ih.__Instance;
            var __arg1 = dst_ih is null ? __IntPtr.Zero : dst_ih.__Instance;
            __Internal.IupCopyAttributes(__arg0, __arg1);
        }

        public static global::IUP.Ihandle IupSetAtt(string handle_name, global::IUP.Ihandle ih, string name)
        {
            var __arg1 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupSetAtt(handle_name, __arg1, name);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSetAttributes(global::IUP.Ihandle ih, string str)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupSetAttributes(__arg0, str);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static sbyte* IupGetAttributes(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributes(__arg0);
            return __ret;
        }

        public static void IupSetAttribute(global::IUP.Ihandle ih, string name, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetAttribute(__arg0, name, value);
        }

        public static void IupSetStrAttribute(global::IUP.Ihandle ih, string name, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrAttribute(__arg0, name, value);
        }

        public static void IupSetStrf(global::IUP.Ihandle ih, string name, string format)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrf(__arg0, name, format);
        }

        public static void IupSetInt(global::IUP.Ihandle ih, string name, int value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetInt(__arg0, name, value);
        }

        public static void IupSetFloat(global::IUP.Ihandle ih, string name, float value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetFloat(__arg0, name, value);
        }

        public static void IupSetDouble(global::IUP.Ihandle ih, string name, double value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetDouble(__arg0, name, value);
        }

        public static void IupSetRGB(global::IUP.Ihandle ih, string name, byte r, byte g, byte b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetRGB(__arg0, name, r, g, b);
        }

        public static void IupSetRGBA(global::IUP.Ihandle ih, string name, byte r, byte g, byte b, byte a)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetRGBA(__arg0, name, r, g, b, a);
        }

        public static sbyte* IupGetAttribute(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttribute(__arg0, name);
            return __ret;
        }

        public static int IupGetInt(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetInt(__arg0, name);
            return __ret;
        }

        public static int IupGetInt2(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetInt2(__arg0, name);
            return __ret;
        }

        public static int IupGetIntInt(global::IUP.Ihandle ih, string name, ref int i1, ref int i2)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            fixed (int* __i12 = &i1)
            {
                var __arg2 = __i12;
                fixed (int* __i23 = &i2)
                {
                    var __arg3 = __i23;
                    var __ret = __Internal.IupGetIntInt(__arg0, name, __arg2, __arg3);
                    return __ret;
                }
            }
        }

        public static float IupGetFloat(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetFloat(__arg0, name);
            return __ret;
        }

        public static double IupGetDouble(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetDouble(__arg0, name);
            return __ret;
        }

        public static void IupGetRGB(global::IUP.Ihandle ih, string name, byte* r, byte* g, byte* b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupGetRGB(__arg0, name, r, g, b);
        }

        public static void IupGetRGBA(global::IUP.Ihandle ih, string name, byte* r, byte* g, byte* b, byte* a)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupGetRGBA(__arg0, name, r, g, b, a);
        }

        public static void IupSetAttributeId(global::IUP.Ihandle ih, string name, int id, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetAttributeId(__arg0, name, id, value);
        }

        public static void IupSetStrAttributeId(global::IUP.Ihandle ih, string name, int id, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrAttributeId(__arg0, name, id, value);
        }

        public static void IupSetStrfId(global::IUP.Ihandle ih, string name, int id, string format)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrfId(__arg0, name, id, format);
        }

        public static void IupSetIntId(global::IUP.Ihandle ih, string name, int id, int value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetIntId(__arg0, name, id, value);
        }

        public static void IupSetFloatId(global::IUP.Ihandle ih, string name, int id, float value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetFloatId(__arg0, name, id, value);
        }

        public static void IupSetDoubleId(global::IUP.Ihandle ih, string name, int id, double value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetDoubleId(__arg0, name, id, value);
        }

        public static void IupSetRGBId(global::IUP.Ihandle ih, string name, int id, byte r, byte g, byte b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetRGBId(__arg0, name, id, r, g, b);
        }

        public static sbyte* IupGetAttributeId(global::IUP.Ihandle ih, string name, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributeId(__arg0, name, id);
            return __ret;
        }

        public static int IupGetIntId(global::IUP.Ihandle ih, string name, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetIntId(__arg0, name, id);
            return __ret;
        }

        public static float IupGetFloatId(global::IUP.Ihandle ih, string name, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetFloatId(__arg0, name, id);
            return __ret;
        }

        public static double IupGetDoubleId(global::IUP.Ihandle ih, string name, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetDoubleId(__arg0, name, id);
            return __ret;
        }

        public static void IupGetRGBId(global::IUP.Ihandle ih, string name, int id, byte* r, byte* g, byte* b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupGetRGBId(__arg0, name, id, r, g, b);
        }

        public static void IupSetAttributeId2(global::IUP.Ihandle ih, string name, int lin, int col, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetAttributeId2(__arg0, name, lin, col, value);
        }

        public static void IupSetStrAttributeId2(global::IUP.Ihandle ih, string name, int lin, int col, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrAttributeId2(__arg0, name, lin, col, value);
        }

        public static void IupSetStrfId2(global::IUP.Ihandle ih, string name, int lin, int col, string format)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetStrfId2(__arg0, name, lin, col, format);
        }

        public static void IupSetIntId2(global::IUP.Ihandle ih, string name, int lin, int col, int value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetIntId2(__arg0, name, lin, col, value);
        }

        public static void IupSetFloatId2(global::IUP.Ihandle ih, string name, int lin, int col, float value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetFloatId2(__arg0, name, lin, col, value);
        }

        public static void IupSetDoubleId2(global::IUP.Ihandle ih, string name, int lin, int col, double value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetDoubleId2(__arg0, name, lin, col, value);
        }

        public static void IupSetRGBId2(global::IUP.Ihandle ih, string name, int lin, int col, byte r, byte g, byte b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetRGBId2(__arg0, name, lin, col, r, g, b);
        }

        public static sbyte* IupGetAttributeId2(global::IUP.Ihandle ih, string name, int lin, int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributeId2(__arg0, name, lin, col);
            return __ret;
        }

        public static int IupGetIntId2(global::IUP.Ihandle ih, string name, int lin, int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetIntId2(__arg0, name, lin, col);
            return __ret;
        }

        public static float IupGetFloatId2(global::IUP.Ihandle ih, string name, int lin, int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetFloatId2(__arg0, name, lin, col);
            return __ret;
        }

        public static double IupGetDoubleId2(global::IUP.Ihandle ih, string name, int lin, int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetDoubleId2(__arg0, name, lin, col);
            return __ret;
        }

        public static void IupGetRGBId2(global::IUP.Ihandle ih, string name, int lin, int col, byte* r, byte* g, byte* b)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupGetRGBId2(__arg0, name, lin, col, r, g, b);
        }

        public static void IupSetGlobal(string name, string value)
        {
            __Internal.IupSetGlobal(name, value);
        }

        public static void IupSetStrGlobal(string name, string value)
        {
            __Internal.IupSetStrGlobal(name, value);
        }

        public static sbyte* IupGetGlobal(string name)
        {
            var __ret = __Internal.IupGetGlobal(name);
            return __ret;
        }

        public static global::IUP.Ihandle IupSetFocus(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupSetFocus(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGetFocus()
        {
            var __ret = __Internal.IupGetFocus();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupPreviousField(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupPreviousField(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupNextField(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupNextField(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Icallback IupGetCallback(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetCallback(__arg0, name);
            var __ptr0 = __ret;
            return __ptr0 == IntPtr.Zero? null : (global::IUP.Icallback) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::IUP.Icallback));
        }

        public static global::IUP.Icallback IupSetCallback(global::IUP.Ihandle ih, string name, global::IUP.Icallback func)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg2 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
            var __ret = __Internal.IupSetCallback(__arg0, name, __arg2);
            var __ptr0 = __ret;
            return __ptr0 == IntPtr.Zero? null : (global::IUP.Icallback) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::IUP.Icallback));
        }

        public static global::IUP.Ihandle IupSetCallbacks(global::IUP.Ihandle ih, string name, global::IUP.Icallback func)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg2 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
            var __ret = __Internal.IupSetCallbacks(__arg0, name, __arg2);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Icallback IupGetFunction(string name)
        {
            var __ret = __Internal.IupGetFunction(name);
            var __ptr0 = __ret;
            return __ptr0 == IntPtr.Zero? null : (global::IUP.Icallback) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::IUP.Icallback));
        }

        public static global::IUP.Icallback IupSetFunction(string name, global::IUP.Icallback func)
        {
            var __arg1 = func == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(func);
            var __ret = __Internal.IupSetFunction(name, __arg1);
            var __ptr0 = __ret;
            return __ptr0 == IntPtr.Zero? null : (global::IUP.Icallback) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::IUP.Icallback));
        }

        public static global::IUP.Ihandle IupGetHandle(string name)
        {
            var __ret = __Internal.IupGetHandle(name);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSetHandle(string name, global::IUP.Ihandle ih)
        {
            var __arg1 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupSetHandle(name, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static int IupGetAllNames(sbyte** names, int n)
        {
            var __ret = __Internal.IupGetAllNames(names, n);
            return __ret;
        }

        public static int IupGetAllDialogs(sbyte** names, int n)
        {
            var __ret = __Internal.IupGetAllDialogs(names, n);
            return __ret;
        }

        public static sbyte* IupGetName(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetName(__arg0);
            return __ret;
        }

        public static void IupSetAttributeHandle(global::IUP.Ihandle ih, string name, global::IUP.Ihandle ih_named)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg2 = ih_named is null ? __IntPtr.Zero : ih_named.__Instance;
            __Internal.IupSetAttributeHandle(__arg0, name, __arg2);
        }

        public static global::IUP.Ihandle IupGetAttributeHandle(global::IUP.Ihandle ih, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributeHandle(__arg0, name);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void IupSetAttributeHandleId(global::IUP.Ihandle ih, string name, int id, global::IUP.Ihandle ih_named)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg3 = ih_named is null ? __IntPtr.Zero : ih_named.__Instance;
            __Internal.IupSetAttributeHandleId(__arg0, name, id, __arg3);
        }

        public static global::IUP.Ihandle IupGetAttributeHandleId(global::IUP.Ihandle ih, string name, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributeHandleId(__arg0, name, id);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void IupSetAttributeHandleId2(global::IUP.Ihandle ih, string name, int lin, int col, global::IUP.Ihandle ih_named)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg4 = ih_named is null ? __IntPtr.Zero : ih_named.__Instance;
            __Internal.IupSetAttributeHandleId2(__arg0, name, lin, col, __arg4);
        }

        public static global::IUP.Ihandle IupGetAttributeHandleId2(global::IUP.Ihandle ih, string name, int lin, int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetAttributeHandleId2(__arg0, name, lin, col);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static sbyte* IupGetClassName(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetClassName(__arg0);
            return __ret;
        }

        public static sbyte* IupGetClassType(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupGetClassType(__arg0);
            return __ret;
        }

        public static int IupGetAllClasses(sbyte** names, int n)
        {
            var __ret = __Internal.IupGetAllClasses(names, n);
            return __ret;
        }

        public static int IupGetClassAttributes(string classname, sbyte** names, int n)
        {
            var __ret = __Internal.IupGetClassAttributes(classname, names, n);
            return __ret;
        }

        public static int IupGetClassCallbacks(string classname, sbyte** names, int n)
        {
            var __ret = __Internal.IupGetClassCallbacks(classname, names, n);
            return __ret;
        }

        public static void IupSaveClassAttributes(global::IUP.Ihandle ih)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSaveClassAttributes(__arg0);
        }

        public static void IupCopyClassAttributes(global::IUP.Ihandle src_ih, global::IUP.Ihandle dst_ih)
        {
            var __arg0 = src_ih is null ? __IntPtr.Zero : src_ih.__Instance;
            var __arg1 = dst_ih is null ? __IntPtr.Zero : dst_ih.__Instance;
            __Internal.IupCopyClassAttributes(__arg0, __arg1);
        }

        public static void IupSetClassDefaultAttribute(string classname, string name, string value)
        {
            __Internal.IupSetClassDefaultAttribute(classname, name, value);
        }

        public static int IupClassMatch(global::IUP.Ihandle ih, string classname)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupClassMatch(__arg0, classname);
            return __ret;
        }

        public static global::IUP.Ihandle IupCreate(string classname)
        {
            var __ret = __Internal.IupCreate(classname);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCreatev(string classname, void** @params)
        {
            var __ret = __Internal.IupCreatev(classname, @params);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCreatep(string classname, __IntPtr first)
        {
            var __ret = __Internal.IupCreatep(classname, first);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        /// <summary>*********************************************************************</summary>
        public static global::IUP.Ihandle IupFill()
        {
            var __ret = __Internal.IupFill();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSpace()
        {
            var __ret = __Internal.IupSpace();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupRadio(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupRadio(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupVbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupVbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupVboxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupVboxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupZbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupZbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupZboxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupZboxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupHbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupHbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupHboxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupHboxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupNormalizer(global::IUP.Ihandle ih_first)
        {
            var __arg0 = ih_first is null ? __IntPtr.Zero : ih_first.__Instance;
            var __ret = __Internal.IupNormalizer(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupNormalizerv(global::IUP.Ihandle ih_list)
        {
            var ____arg0 = ih_list is null ? __IntPtr.Zero : ih_list.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupNormalizerv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupCbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCboxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupCboxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupSbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSplit(global::IUP.Ihandle child1, global::IUP.Ihandle child2)
        {
            var __arg0 = child1 is null ? __IntPtr.Zero : child1.__Instance;
            var __arg1 = child2 is null ? __IntPtr.Zero : child2.__Instance;
            var __ret = __Internal.IupSplit(__arg0, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupScrollBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupScrollBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatScrollBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupFlatScrollBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGridBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupGridBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGridBoxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupGridBoxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMultiBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupMultiBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMultiBoxv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupMultiBoxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupExpander(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupExpander(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupDetachBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupDetachBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupBackgroundBox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupBackgroundBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFrame(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupFrame(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatFrame(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupFlatFrame(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupImage(int width, int height, byte* pixels)
        {
            var __ret = __Internal.IupImage(width, height, pixels);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupImageRGB(int width, int height, byte* pixels)
        {
            var __ret = __Internal.IupImageRGB(width, height, pixels);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupImageRGBA(int width, int height, byte* pixels)
        {
            var __ret = __Internal.IupImageRGBA(width, height, pixels);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupItem(string title, string action)
        {
            var __ret = __Internal.IupItem(title, action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSubmenu(string title, global::IUP.Ihandle child)
        {
            var __arg1 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupSubmenu(title, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSeparator()
        {
            var __ret = __Internal.IupSeparator();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMenu(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupMenu(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMenuv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupMenuv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupButton(string title, string action)
        {
            var __ret = __Internal.IupButton(title, action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatButton(string title)
        {
            var __ret = __Internal.IupFlatButton(title);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatToggle(string title)
        {
            var __ret = __Internal.IupFlatToggle(title);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupDropButton(global::IUP.Ihandle dropchild)
        {
            var __arg0 = dropchild is null ? __IntPtr.Zero : dropchild.__Instance;
            var __ret = __Internal.IupDropButton(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatLabel(string title)
        {
            var __ret = __Internal.IupFlatLabel(title);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatSeparator()
        {
            var __ret = __Internal.IupFlatSeparator();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCanvas(string action)
        {
            var __ret = __Internal.IupCanvas(action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupDialog(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupDialog(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupUser()
        {
            var __ret = __Internal.IupUser();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupThread()
        {
            var __ret = __Internal.IupThread();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupLabel(string title)
        {
            var __ret = __Internal.IupLabel(title);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupList(string action)
        {
            var __ret = __Internal.IupList(action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatList()
        {
            var __ret = __Internal.IupFlatList();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupText(string action)
        {
            var __ret = __Internal.IupText(action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMultiLine(string action)
        {
            var __ret = __Internal.IupMultiLine(action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupToggle(string title, string action)
        {
            var __ret = __Internal.IupToggle(title, action);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupTimer()
        {
            var __ret = __Internal.IupTimer();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupClipboard()
        {
            var __ret = __Internal.IupClipboard();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupProgressBar()
        {
            var __ret = __Internal.IupProgressBar();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupVal(string type)
        {
            var __ret = __Internal.IupVal(type);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatVal(string type)
        {
            var __ret = __Internal.IupFlatVal(type);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatTree()
        {
            var __ret = __Internal.IupFlatTree();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupTabs(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupTabs(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupTabsv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupTabsv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatTabs(global::IUP.Ihandle first)
        {
            var __arg0 = first is null ? __IntPtr.Zero : first.__Instance;
            var __ret = __Internal.IupFlatTabs(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFlatTabsv(global::IUP.Ihandle children)
        {
            var ____arg0 = children is null ? __IntPtr.Zero : children.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupFlatTabsv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupTree()
        {
            var __ret = __Internal.IupTree();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupLink(string url, string title)
        {
            var __ret = __Internal.IupLink(url, title);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupAnimatedLabel(global::IUP.Ihandle animation)
        {
            var __arg0 = animation is null ? __IntPtr.Zero : animation.__Instance;
            var __ret = __Internal.IupAnimatedLabel(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupDatePick()
        {
            var __ret = __Internal.IupDatePick();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupCalendar()
        {
            var __ret = __Internal.IupCalendar();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupColorbar()
        {
            var __ret = __Internal.IupColorbar();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGauge()
        {
            var __ret = __Internal.IupGauge();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupDial(string type)
        {
            var __ret = __Internal.IupDial(type);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupColorBrowser()
        {
            var __ret = __Internal.IupColorBrowser();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSpin()
        {
            var __ret = __Internal.IupSpin();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupSpinbox(global::IUP.Ihandle child)
        {
            var __arg0 = child is null ? __IntPtr.Zero : child.__Instance;
            var __ret = __Internal.IupSpinbox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        /// <summary>*********************************************************************</summary>
        public static int IupStringCompare(string str1, string str2, int casesensitive, int lexicographic)
        {
            var __ret = __Internal.IupStringCompare(str1, str2, casesensitive, lexicographic);
            return __ret;
        }

        public static int IupSaveImageAsText(global::IUP.Ihandle ih, string filename, string format, string name)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupSaveImageAsText(__arg0, filename, format, name);
            return __ret;
        }

        public static global::IUP.Ihandle IupImageGetHandle(string name)
        {
            var __ret = __Internal.IupImageGetHandle(name);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void IupTextConvertLinColToPos(global::IUP.Ihandle ih, int lin, int col, ref int pos)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            fixed (int* __pos3 = &pos)
            {
                var __arg3 = __pos3;
                __Internal.IupTextConvertLinColToPos(__arg0, lin, col, __arg3);
            }
        }

        public static void IupTextConvertPosToLinCol(global::IUP.Ihandle ih, int pos, ref int lin, ref int col)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            fixed (int* __lin2 = &lin)
            {
                var __arg2 = __lin2;
                fixed (int* __col3 = &col)
                {
                    var __arg3 = __col3;
                    __Internal.IupTextConvertPosToLinCol(__arg0, pos, __arg2, __arg3);
                }
            }
        }

        public static int IupConvertXYToPos(global::IUP.Ihandle ih, int x, int y)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupConvertXYToPos(__arg0, x, y);
            return __ret;
        }

        public static void IupStoreGlobal(string name, string value)
        {
            __Internal.IupStoreGlobal(name, value);
        }

        public static void IupStoreAttribute(global::IUP.Ihandle ih, string name, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupStoreAttribute(__arg0, name, value);
        }

        public static void IupSetfAttribute(global::IUP.Ihandle ih, string name, string format)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetfAttribute(__arg0, name, format);
        }

        public static void IupStoreAttributeId(global::IUP.Ihandle ih, string name, int id, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupStoreAttributeId(__arg0, name, id, value);
        }

        public static void IupSetfAttributeId(global::IUP.Ihandle ih, string name, int id, string f)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetfAttributeId(__arg0, name, id, f);
        }

        public static void IupStoreAttributeId2(global::IUP.Ihandle ih, string name, int lin, int col, string value)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupStoreAttributeId2(__arg0, name, lin, col, value);
        }

        public static void IupSetfAttributeId2(global::IUP.Ihandle ih, string name, int lin, int col, string format)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            __Internal.IupSetfAttributeId2(__arg0, name, lin, col, format);
        }

        public static int IupTreeSetUserId(global::IUP.Ihandle ih, int id, __IntPtr userid)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupTreeSetUserId(__arg0, id, userid);
            return __ret;
        }

        public static __IntPtr IupTreeGetUserId(global::IUP.Ihandle ih, int id)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupTreeGetUserId(__arg0, id);
            return __ret;
        }

        public static int IupTreeGetId(global::IUP.Ihandle ih, __IntPtr userid)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __ret = __Internal.IupTreeGetId(__arg0, userid);
            return __ret;
        }

        public static void IupTreeSetAttributeHandle(global::IUP.Ihandle ih, string name, int id, global::IUP.Ihandle ih_named)
        {
            var __arg0 = ih is null ? __IntPtr.Zero : ih.__Instance;
            var __arg3 = ih_named is null ? __IntPtr.Zero : ih_named.__Instance;
            __Internal.IupTreeSetAttributeHandle(__arg0, name, id, __arg3);
        }

        /// <summary>*********************************************************************</summary>
        public static global::IUP.Ihandle IupFileDlg()
        {
            var __ret = __Internal.IupFileDlg();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupMessageDlg()
        {
            var __ret = __Internal.IupMessageDlg();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupColorDlg()
        {
            var __ret = __Internal.IupColorDlg();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupFontDlg()
        {
            var __ret = __Internal.IupFontDlg();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupProgressDlg()
        {
            var __ret = __Internal.IupProgressDlg();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static int IupGetFile(sbyte* arq)
        {
            var __ret = __Internal.IupGetFile(arq);
            return __ret;
        }

        public static void IupMessage(string title, string msg)
        {
            __Internal.IupMessage(title, msg);
        }

        public static void IupMessagef(string title, string format)
        {
            __Internal.IupMessagef(title, format);
        }

        public static void IupMessageError(global::IUP.Ihandle parent, string message)
        {
            var __arg0 = parent is null ? __IntPtr.Zero : parent.__Instance;
            __Internal.IupMessageError(__arg0, message);
        }

        public static int IupMessageAlarm(global::IUP.Ihandle parent, string title, string message, string buttons)
        {
            var __arg0 = parent is null ? __IntPtr.Zero : parent.__Instance;
            var __ret = __Internal.IupMessageAlarm(__arg0, title, message, buttons);
            return __ret;
        }

        public static int IupAlarm(string title, string msg, string b1, string b2, string b3)
        {
            var __ret = __Internal.IupAlarm(title, msg, b1, b2, b3);
            return __ret;
        }

        public static int IupScanf(string format)
        {
            var __ret = __Internal.IupScanf(format);
            return __ret;
        }

        public static int IupListDialog(int type, string title, int size, sbyte** list, int op, int max_col, int max_lin, ref int marks)
        {
            fixed (int* __marks7 = &marks)
            {
                var __arg7 = __marks7;
                var __ret = __Internal.IupListDialog(type, title, size, list, op, max_col, max_lin, __arg7);
                return __ret;
            }
        }

        public static int IupGetText(string title, sbyte* text, int maxsize)
        {
            var __ret = __Internal.IupGetText(title, text, maxsize);
            return __ret;
        }

        public static int IupGetColor(int x, int y, byte* r, byte* g, byte* b)
        {
            var __ret = __Internal.IupGetColor(x, y, r, g, b);
            return __ret;
        }

        public static int IupGetParam(string title, global::IUP.Iparamcb action, __IntPtr user_data, string format)
        {
            var __arg1 = action == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(action);
            var __ret = __Internal.IupGetParam(title, __arg1, user_data, format);
            return __ret;
        }

        public static int IupGetParamv(string title, global::IUP.Iparamcb action, __IntPtr user_data, string format, int param_count, int param_extra, void** param_data)
        {
            var __arg1 = action == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(action);
            var __ret = __Internal.IupGetParamv(title, __arg1, user_data, format, param_count, param_extra, param_data);
            return __ret;
        }

        public static global::IUP.Ihandle IupParam(string format)
        {
            var __ret = __Internal.IupParam(format);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupParamBox(global::IUP.Ihandle param)
        {
            var __arg0 = param is null ? __IntPtr.Zero : param.__Instance;
            var __ret = __Internal.IupParamBox(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupParamBoxv(global::IUP.Ihandle param_array)
        {
            var ____arg0 = param_array is null ? __IntPtr.Zero : param_array.__Instance;
            var __arg0 = new __IntPtr(&____arg0);
            var __ret = __Internal.IupParamBoxv(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupLayoutDialog(global::IUP.Ihandle dialog)
        {
            var __arg0 = dialog is null ? __IntPtr.Zero : dialog.__Instance;
            var __ret = __Internal.IupLayoutDialog(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupElementPropertiesDialog(global::IUP.Ihandle parent, global::IUP.Ihandle elem)
        {
            var __arg0 = parent is null ? __IntPtr.Zero : parent.__Instance;
            var __arg1 = elem is null ? __IntPtr.Zero : elem.__Instance;
            var __ret = __Internal.IupElementPropertiesDialog(__arg0, __arg1);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupGlobalsDialog()
        {
            var __ret = __Internal.IupGlobalsDialog();
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::IUP.Ihandle IupClassInfoDialog(global::IUP.Ihandle parent)
        {
            var __arg0 = parent is null ? __IntPtr.Zero : parent.__Instance;
            var __ret = __Internal.IupClassInfoDialog(__arg0);
            var __result0 = global::IUP.Ihandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }
    }
}
